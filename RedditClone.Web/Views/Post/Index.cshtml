@using RedditClone.Common.Enums.SortTypes
@model PostViewModel
@{
    ViewData["Title"] = "Index";
}

<div class="grey-outline-container d-flex">
    <div class="flex-column">
        <div>
            <a class="link-grey link-green-hover" href="#">
                <i class="fas fa-arrow-up fa-lg"></i>
            </a>
        </div>
        <div>
            &nbsp;@Model.VotesCount
        </div>
        <div>
            <a class="link-grey link-red-hover" href="#">
                <i class="fas fa-arrow-down fa-lg"></i>
            </a>
        </div>
    </div>
    &nbsp;  
    <div class="flex-column flex-grow-1">
        <div class="flex-row d-flex">
            <a class="link-grey" asp-controller="Post" asp-action="Index" asp-route-subredditId="@Model.SubredditId">
                r/@Model.Subreddit.Name
            </a>

            &nbsp;
            @Model.Title
            posted by
            &nbsp;

            <a class="link-blue" asp-area="Identity" asp-controller="User" asp-action="Index" asp-route-userId="@Model.AuthorId">
                @Model.Author.UserName
            </a>

            <div class="ml-auto">
                @Model.PostDate.ToShortDateString()
                @Model.PostDate.ToShortTimeString()
            </div>
        </div>

        <hr class="hr-no-bottom-margin hr-no-top-margin" />

        <div class="flex-row">
            @Model.Description
        </div>

        <br />

        <div class="flex-row">
            <i class="fas fa-comment"></i>
            @Model.CommentsCount
            Comments
        </div>

        <br />

        <div class="flex-row">
            <a class="btn btn-outline-blue" asp-area="Identity" asp-controller="Comment" asp-action="AddToPost" asp-route-postId="@Model.Id">
                New comment
            </a>
        </div>

        <hr class="hr-no-bottom-margin" />
        <div class="d-flex flex-row">
            <div class="btn-grey">
                Sort
            </div>
            &nbsp;
            <div class="dropdown">
                <button class="btn btn-white btn-secondary-nav dropdown-toggle" type="button" data-toggle="dropdown">
                    @Model.SelectedCommentSortType.ToString()
                </button>
                <div class="dropdown-menu dropdown-menu-small">
                    @foreach (var commentSortType in (CommentSortType[])Enum.GetValues(typeof(CommentSortType)))
                    {
                        if (commentSortType != Model.SelectedCommentSortType)
                        {
                            var sortTypeName = commentSortType.ToString();

                            <form asp-route-sortType="@sortTypeName" asp-route-postId="@Model.Id" asp-controller="Post" asp-action="ChangeCommentSortType" method="post">
                                <button class="btn dropdown-item btn-dropdown-item btn-grey" type="submit">
                                    @sortTypeName
                                </button>
                            </form>
                        }
                    }
                </div>
            </div>
        </div>
        <hr class="hr-no-top-margin" />

        <div class="flex-row">
            <partial name="_CommentsWithRepliesPartial" model="Model.Comments" />
        </div>
    </div>
</div>

<script>
//-----------------------------------------------------------------
@* Display and hide scripts *@
//-----------------------------------------------------------------
window.onload = function () {
    let repleyButtons = $(".btn-reply");

    repleyButtons.on("click", function (e) {
        hideAllForms();
        showAllReplyBtns();

        var targetBtn = $(e.currentTarget);
        targetBtn.attr("hidden", "hidden");

        var targetBtnParrent = $(targetBtn.parent()[0]);
        showForm(targetBtnParrent);

        var btnCancel = $(targetBtnParrent.find(".btn-reply-cancel")[0]);
        btnCancel.on("click", function (e) {
            var targetBtn = $(e.currentTarget);
            var targetBtnParrent = $(targetBtn.parent()[0]);

            hideForm(targetBtnParrent);
            showReplyBtn(targetBtnParrent);
        })
    })

    function hideForm(parent) {
        var btnPost = $(parent.find(".btn-reply-post")[0]);
        var btnCancel = $(parent.find(".btn-reply-cancel")[0]);
        var form = $(parent.find(".form-reply")[0]);

        btnPost.attr("hidden", "hidden");
        btnCancel.attr("hidden", "hidden");
        form.attr("hidden", "hidden");
    }

    function showForm(parent) {
        var btnPost = $(parent.find(".btn-reply-post")[0]);
        var btnCancel = $(parent.find(".btn-reply-cancel")[0]);
        var form = $(parent.find(".form-reply")[0]);

        btnPost.removeAttr("hidden");
        btnCancel.removeAttr("hidden");
        form.removeAttr("hidden");
    }

    function hideAllForms() {
        var btnsPost = $(".btn-reply-post");
        var btnsCancel = $(".btn-reply-cancel");
        var forms = $(".form-reply");

        btnsPost.attr("hidden", "hidden");
        btnsCancel.attr("hidden", "hidden");
        forms.attr("hidden", "hidden");
    }

    function showAllReplyBtns() {
        let repleyButtons = $(".btn-reply");
        repleyButtons.removeAttr("hidden");
    }

    function showReplyBtn(parent) {
        let repleybtn = $(parent.find(".btn-reply")[0]);
        repleybtn.removeAttr("hidden");
    }

//-----------------------------------------------------------------
@*Submit form scrips*@
//-----------------------------------------------------------------

    let fakePostButtons = $(".btn-reply-post");

    fakePostButtons.on("click", function (e) {
        var targetFakePostBtn = $(e.currentTarget);
        var targetBtnParrent = $(targetFakePostBtn.parent()[0]);

        var realPostBtn = targetBtnParrent.find(".btn-reply-submit")[0];
        realPostBtn.click();
    })
}
</script>